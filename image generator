<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Metadata Generator</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- Google Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        * {
            box-sizing: border-box;
        }

        body {
            background-color: #f9fafb;
            font-family: 'Inter', sans-serif;
            color: #1f2937;
            margin: 0;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        .container {
            background-color: #ffffff;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            width: 100%;
        }

        h1 {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 24px;
            text-align: center;
            color: #3498db;
            padding: 10px;
            border: 3px solid;
            border-image: linear-gradient(to right, #2575fc);
            border-image-slice: 1;
        }

        .form-label {
            font-weight: 500;
            color: #374151;
            margin-bottom: 8px;
        }

        .form-control {
            border: 1px solid #d1d5db;
            border-radius: 8px;
            padding: 12px;
            font-size: 16px;
            color: #374151;
        }

        .form-control:focus {
            border-color: #2575fc;
            box-shadow: 0 0 0 3px rgba(37, 117, 252, 0.2);
        }

        .preview-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 16px;
            margin: 24px 0;
        }

        .image-container {
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            background-color: #f3f4f6;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 120px;
        }

        .image-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }

        .remove-image {
            position: absolute;
            top: 8px;
            right: 8px;
            background-color: rgba(0, 0, 0, 0.6);
            color: #ffffff;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .remove-image:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

        .btn-primary {
            background-color: #3498db;
            border: none;
            border-radius: 8px;
            padding: 12px 20px;
            font-size: 16px;
            font-weight: 500;
            color: #ffffff;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
        }

        .btn-primary:hover {
            background-color: #1a56d4;
            box-shadow: 0 5px 15px rgba(37, 117, 252, 0.4);
        }

        .progress {
            height: 12px;
            background-color: #e5e7eb;
            border-radius: 6px;
            overflow: hidden;
            margin-top: 24px;
        }

        .progress-bar {
            background-color: #2575fc;
            height: 100%;
            width: 0%;
            transition: width 0.4s ease;
        }

        .alert {
            margin-top: 16px;
            border-radius: 8px;
            font-size: 14px;
        }

        @media (max-width: 600px) {
            .container {
                padding: 24px;
            }

            h1 {
                font-size: 28px;
            }
        }
    </style>
</head>

<body>

    <div class="container">
        <h1>Image Metadata Generator</h1>

        {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
        <div class="alert alert-danger">
            {% for category, message in messages %}
            <p class="mb-0">{{ message }}</p>
            {% endfor %}
        </div>
        {% endif %}
        {% endwith %}

        <form id="uploadForm" method="POST" action="/upload" enctype="multipart/form-data">
            <div class="mb-4">
                <label for="fileUpload" class="form-label">Select Images</label>
                <input type="file" class="form-control" id="fileUpload" name="files[]" multiple accept="image/*">
            </div>

            <div class="mb-4">
                <label for="prompt" class="form-label">Enter Prompt for Image Description</label>
                <textarea id="prompt" name="prompt" class="form-control" rows="4" placeholder="Describe what you want the metadata to focus on (e.g., image contents, background, setting)."></textarea>
            </div>

            <div class="preview-images" id="preview-images"></div>

            <div id="message" class="alert alert-danger" style="display: none;"></div>

            <button type="submit" class="btn btn-primary">
                <i class="fas fa-upload me-2"></i> Upload and Generate Metadata
            </button>
        </form>

        <div class="progress" id="progress-bar" style="display: none;">
            <div class="progress-bar" role="progressbar"></div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Socket.io JS -->
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

    <script>
        const fileUpload = document.getElementById('fileUpload');
        const previewContainer = document.getElementById('preview-images');
        const uploadForm = document.getElementById('uploadForm');
        const progressBar = document.getElementById('progress-bar');
        const progressBarInner = progressBar.querySelector('.progress-bar');
        const messageDiv = document.getElementById('message');
        const maxImages = 20;

        fileUpload.addEventListener('change', function (event) {
            handleFiles(event.target.files);
        });

        function handleFiles(files) {
            if (files.length > maxImages) {
                messageDiv.style.display = 'block';
                messageDiv.textContent = `You can only upload a maximum of ${maxImages} images.`;
                fileUpload.value = '';
                previewContainer.innerHTML = '';
                return;
            } else {
                messageDiv.style.display = 'none';
            }

            previewContainer.innerHTML = '';
            Array.from(files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imgContainer = document.createElement('div');
                    imgContainer.className = 'image-container';

                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.alt = `Image ${index + 1}`;
                    imgContainer.appendChild(img);

                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'remove-image';
                    removeBtn.innerHTML = '&times;';
                    removeBtn.addEventListener('click', () => removeImage(index));
                    imgContainer.appendChild(removeBtn);

                    previewContainer.appendChild(imgContainer);
                }
                reader.readAsDataURL(file);
            });
        }

        function removeImage(index) {
            const dt = new DataTransfer();
            const { files } = fileUpload;
            for (let i = 0; i < files.length; i++) {
                if (i !== index) dt.items.add(files[i]);
            }
            fileUpload.files = dt.files;
            handleFiles(fileUpload.files);
        }

        const socket = io();

        socket.on('progress', function (data) {
            progressBar.style.display = 'block';
            progressBarInner.style.width = `${data.progress}%`;

            if (data.progress === 100) {
                progressBarInner.style.width = '100%';
                setTimeout(() => {
                    progressBar.style.display = 'none';
                    progressBarInner.style.width = '0%';
                }, 2000);
            }
        });

        uploadForm.addEventListener('submit', function (event) {
            if (fileUpload.files.length === 0) {
                messageDiv.style.display = 'block';
                messageDiv.textContent = 'Please select at least one image to upload.';
                event.preventDefault();
            } else {
                messageDiv.style.display = 'none';
                progressBar.style.display = 'block';
                progressBarInner.style.width = '0%';
                
                socket.emit('start-upload');

                // Simulating Excel file creation progress
                let progress = 0;
                const interval = setInterval(() => {
                    progress += Math.random() * 10; // Increase progress randomly
                    if (progress >= 100) {
                        progress = 100;
                        clearInterval(interval);
                        socket.emit('upload-complete');
                    }
                    progressBarInner.style.width = `${progress}%`;
                }, 500);
            }
        });
    </script>

</body>

</html>
